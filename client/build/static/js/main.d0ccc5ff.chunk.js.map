{"version":3,"sources":["components/home.js","http-common.js","services/GeneService.js","services/ProteinService.js","components/gene/GeneView.js","components/gene/CreateGene.js","components/gene/UpdateGene.js","components/gene/GeneList.js","components/protein/CreateProtein.js","components/protein/ProteinView.js","components/protein/ProteinList.js","components/protein/UpdateProtein.js","App.js","index.js"],"names":["home","className","href","axios","create","baseURL","headers","http","get","id","data","post","put","delete","GeneView","props","useState","name","sequence","currentGene","setCurrentGene","message","proteins","setProteins","getAssociatedProteins","geneID","ProteinDataService","then","response","console","log","catch","e","useEffect","match","params","GeneDataService","map","protein","index","to","styles","CreateGene","initialGeneState","gene","setGene","submitted","setSubmitted","error","setError","useForm","register","handleSubmit","errors","handleInputChange","event","target","value","style","color","onClick","onSubmit","saveGene","htmlFor","type","required","onChange","ref","input","borderColor","pattern","UpdateGene","setMessage","history","push","GenesList","genes","setGenes","currentIndex","setCurrentIndex","retrieveGenes","setActiveGene","CreateProtein","initialProteinState","related_gene","setProtein","saveProtein","ProteinView","currentProtein","setCurrentProtein","ProteinsList","retrieveProteins","setActiveProtein","UpdateProtein","App","exact","path","component","Home","GeneList","ProteinList","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.d0ccc5ff.chunk.js","sourcesContent":["const home = () => {\n    return (\n      <div className=\"container content\">\n        <div className=\"row\">\n          <div className=\"col-sm-3 talk\">\n            <h1>GeneStore</h1>\n            <br />\n            <br />\n            <h6>\n              <a className=\"btn btn-dark start start-two\" href=\"/genes\">\n                Genes\n              </a>\n              <a className=\"btn btn-dark start start-two\" href=\"/proteins\">\n                Proteins\n              </a>\n            </h6>\n          </div>\n          <div className=\"col-sm-9 showcase-img\">\n            {/* <div className=\"circle\"></div> */}\n          </div>\n        </div>\n      </div>\n    );\n}\n\nexport default home","import axios from 'axios';\n\nexport default axios.create({\n    baseURL: 'http://localhost:8000/api',\n    headers: {\n        \"Content-type\": \"application/json\"\n    }\n});","// Service for sending requests to Gene API routes\nimport http from \"../http-common\";\n\nconst getGenes = () => {\n    return http.get(\"/genes/\");\n};\n\nconst getGene = id => {\n    return http.get(`/genes/${id}/`);\n};\n\nconst createGene = data => {\n    return http.post(\"/genes/\", data);\n};\n\nconst updateGene = (id, data) => {\n    return http.put(`/genes/${id}/`, data);\n};\n\nconst deleteGene = (id) => {\n    return http.delete(`/genes/${id}/`)\n}\n\nexport default {\n    getGenes,\n    getGene,\n    createGene,\n    updateGene,\n    deleteGene\n};","// Service for sending requests to Protein API routes\nimport http from \"../http-common\";\n\nconst getProteins = () => {\n  return http.get(\"/proteins/\");\n};\n\nconst getAssociatedProteins = id => {\n  return http.get(`/proteins/?search=${id}`);\n}\n\nconst getProtein = id => {\n  return http.get(`/proteins/${id}/`);\n};\n\nconst createProtein = data => {\n  return http.post(\"/proteins/\", data);\n};\n\nconst updateProtein = (id, data) => {\n  return http.put(`/proteins/${id}/`, data);\n};\n\nconst deleteProtein = id => {\n  return http.delete(`/proteins/${id}/`);\n};\n\nexport default {\n  getProteins,\n  getProtein,\n  createProtein,\n  updateProtein,\n  deleteProtein,\n  getAssociatedProteins\n};","// Single Gene View\nimport React, { useState, useEffect } from \"react\";\nimport GeneDataService from \"../../services/GeneService\";\nimport ProteinDataService from \"../../services/ProteinService\";\nimport { Link } from \"react-router-dom\";\n\nconst GeneView = (props) => {\n  const initialGeneState = {\n    id: null,\n    name: \"\",\n    sequence: \"\",\n  };\n  const [currentGene, setCurrentGene] = useState(initialGeneState);\n  const [message, setMessage] = useState(\"\");\n  const [proteins, setProteins] = useState([]);\n\n  const getGene = (id) => {\n    GeneDataService.getGene(id)\n      .then((response) => {\n        setCurrentGene(response.data);\n        getAssociatedProteins(response.data.id)\n        console.log(response.data);\n      })\n      .catch((e) => {\n        console.log(e);\n      });\n  };\n\n  const getAssociatedProteins = (geneID) => {\n      ProteinDataService.getAssociatedProteins(geneID)\n        .then((response) => {\n            setProteins(response.data);\n            console.log(response.data);\n        })\n        .catch((e) => {\n            console.log(e);\n        });\n  };\n\n  useEffect(() => {\n    getGene(props.match.params.id);\n  }, [props.match.params.id]);\n\n  const handleInputChange = (event) => {\n    const { name, value } = event.target;\n    setCurrentGene({ ...currentGene, [name]: value });\n  };\n\n  return (\n    <div>\n      {currentGene ? (\n        <div className=\"edit-form\">\n          <h3>Gene: {currentGene.name}</h3>\n          <br />\n          <form>\n            <div className=\"form-group\">\n              <h5>Associated Proteins</h5>\n\n              <ul className=\"form-group\">\n                {proteins &&\n                  proteins.map((protein, index) => (\n                    <li key={index}>\n                      <a href={\"/proteins/\" + protein.id}>{protein.name}</a>\n                    </li>\n                  ))}\n              </ul>\n            </div>\n\n            <div className=\"form-group\">\n              <h5>Sequence</h5>\n              {currentGene.sequence}\n            </div>\n          </form>\n\n          <Link\n            to={\"/genes/update/\" + currentGene.id}\n            className=\"badge badge-warning\">\n            Edit\n          </Link>\n          <p>{message}</p>\n        </div>\n      ) : (\n        <div>\n          <br />\n          <p>An Error has occurred...</p>\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default GeneView;\n","// Create Gene View\nimport React, { useState } from 'react';\nimport GeneDataService from '../../services/GeneService';\n\nimport { useForm } from \"react-hook-form\";\n\nconst styles = {}\n\n\nconst CreateGene = () => {\n    const initialGeneState = {\n        id: null,\n        name: \"\",\n        sequence: \"\",\n    };\n    const [gene, setGene] = useState(initialGeneState);\n    const [submitted, setSubmitted] = useState(false);\n    const [error, setError] = useState(false);\n\n    const { register, handleSubmit, errors } = useForm();\n\n    const handleInputChange = event => {\n        const { name, value } = event.target;\n        setGene({ ...gene, [name]: value});\n    };\n\n    const saveGene = () => {\n        var data = {\n            name: gene.name,\n            sequence: gene.sequence\n        };\n        setError(false)\n        GeneDataService.createGene(data)\n            .then(response => {\n                setGene({\n                    id: response.data.id,\n                    name: response.data.name,\n                    sequence: response.data.sequence\n                });\n                setSubmitted(true);\n                console.log(response.data);\n            })\n            .catch(e => {\n                console.log(e.response.data)\n                setError(true)\n            });\n    };\n\n    const createGene = () => {\n        setGene(initialGeneState);\n        setSubmitted(false);\n    };\n\n    function onSubmit() {\n      saveGene();\n    }\n\n\n    return (\n      <div className=\"submit-form\">\n        {error && (\n          <div style={{ color: `red` }}>\n            This Gene Already Exists\n          </div>\n        )}\n        {submitted ? (\n          <div>\n            <h4>You submitted successfully!</h4>\n            <button className=\"btn btn-success\" onClick={createGene}>\n              New\n            </button>\n          </div>\n        ) : (\n          <div>\n            <h3>New Gene</h3>\n            <form onSubmit={handleSubmit(onSubmit)}>\n              <div className=\"form-group\">\n                <label htmlFor=\"name\">Name</label>\n                <input\n                  type=\"text\"\n                  className=\"form-control\"\n                  id=\"name\"\n                  required\n                  value={gene.name}\n                  onChange={handleInputChange}\n                  name=\"name\"\n                  ref={register({\n                    required: true,\n                  })}\n                  style={{\n                    ...styles.input,\n                    borderColor: errors.name && \"red\",\n                  }}\n                />\n              </div>\n\n              <div className=\"form-group\">\n                <label htmlFor=\"sequence\">Sequence</label>\n                <input\n                  type=\"text\"\n                  className=\"form-control\"\n                  id=\"sequence\"\n                  required\n                  value={gene.sequence}\n                  onChange={handleInputChange}\n                  name=\"sequence\"\n                  ref={register({\n                    required: true,\n                    pattern: /[ATCG]/,\n                  })}\n                  style={{\n                    ...styles.input,\n                    borderColor: errors.sequence && \"red\",\n                  }}\n                />\n                {errors.sequence &&\n                  \"Sequence can only contain characters A,T,C and G\"}\n              </div>\n\n              <button type=\"submit\" className=\"btn btn-success\">\n                Submit\n              </button>\n            </form>\n          </div>\n        )}\n      </div>\n    );\n};\n\nexport default CreateGene;","//Update Gene View\nimport React, { useState, useEffect } from 'react';\nimport GeneDataService from '../../services/GeneService';\nimport { Link } from \"react-router-dom\";\n\nconst UpdateGene = props => {\n    const initialGeneState = {\n        id: null,\n        name: \"\",\n        sequence: \"\"\n    };\n    const [currentGene, setCurrentGene] = useState(initialGeneState);\n    const [message, setMessage] = useState(\"\");\n\n    const getGene = id => {\n        GeneDataService.getGene(id)\n            .then(response => {\n                setCurrentGene(response.data);\n                console.log(response.data);\n            })\n            .catch(e => {\n                console.log(e)\n            });\n    };\n\n    useEffect(() => {\n        getGene(props.match.params.id);\n    }, [props.match.params.id]);\n\n    const handleInputChange = event => {\n        const { name, value } = event.target;\n        setCurrentGene({ ...currentGene, [name]: value});\n    };\n\n    const updateGene = () => {\n        GeneDataService.updateGene(currentGene.id, currentGene)\n            .then(response => {\n                console.log(response.data);\n                setMessage('The Gene was updated successfully');\n            })\n            .catch(e => {\n                console.log(e)\n            });\n    };\n\n    const deleteGene = () => {\n        GeneDataService.deleteGene(currentGene.id)\n            .then(response => {\n                console.log(response.data);\n                props.history.push('/genes/');\n            })\n            .catch(e => {\n                console.log(e);\n            });\n    };\n\n    return (\n      <div>\n        {currentGene ? (\n          <div className=\"edit-form\">\n            <h4>Gene</h4>\n            <form>\n              <div className=\"form-group\">\n                <label htmlFor=\"name\">Name</label>\n                <input\n                  type=\"text\"\n                  className=\"form-control\"\n                  id=\"name\"\n                  name=\"name\"\n                  value={currentGene.name}\n                  onChange={handleInputChange}\n                />\n              </div>\n              <div className=\"form-group\">\n                <label htmlFor=\"sequence\">Sequence</label>\n                <input\n                  type=\"text\"\n                  className=\"form-control\"\n                  id=\"sequence\"\n                  name=\"sequence\"\n                  value={currentGene.sequence}\n                  onChange={handleInputChange}\n                />\n              </div>\n            </form>\n\n            <button className=\"badge badge-danger mr-2\" onClick={deleteGene}>\n              Delete\n            </button>\n\n            <button\n              type=\"submit\"\n              className=\"badge badge-success\"\n              onClick={updateGene}>\n              Update\n            </button>\n            <p>{message}</p>\n          </div>\n        ) : (\n          <div>\n            <br />\n            <p>An Error has occurred...</p>\n          </div>\n        )}\n      </div>\n    );\n}\n\nexport default UpdateGene","// List All Genes View\nimport React, { useState, useEffect } from 'react';\nimport GeneDataService from '../../services/GeneService';\nimport { Link } from 'react-router-dom';\n\nconst GenesList = () => {\n    const [genes, setGenes] = useState([]);\n    const [currentGene, setCurrentGene] = useState(null);\n    const [currentIndex, setCurrentIndex] = useState(-1);\n    useEffect(() => {\n        retrieveGenes();\n    }, []);\n\n    const retrieveGenes = () => {\n        GeneDataService.getGenes()\n            .then(response => {\n                setGenes(response.data);\n                console.log(response.data);\n            })\n            .catch(e => {\n                console.log(e);\n            });\n    };\n\n    const setActiveGene = (gene, index) => {\n        setCurrentGene(gene);\n        setCurrentIndex(index);\n    };\n\n    return (\n      <div className=\"list row\">\n        <div className=\"col-md-6\">\n          <h4>Genes List</h4>\n          <ul className=\"list-group\">\n            {genes &&\n              genes.map((gene, index) => (\n                <li\n                  className={\n                    \"list-group-item \" +\n                    (index === currentIndex ? \"active\" : \"\")\n                  }\n                  onClick={() => setActiveGene(gene, index)}\n                  key={index}>\n                  {gene.name}\n                </li>\n              ))}\n          </ul>\n          <Link to={\"/genes/create\"} className=\"badge badge-success\">\n            Add new Gene\n          </Link>\n        </div>\n        <div className=\"col-md-6\">\n          {currentGene ? (\n            <div>\n              <h4>Gene</h4>\n              <div>\n                <label>\n                  <strong>Name:</strong>\n                </label>{\" \"}\n                {currentGene.name}\n              </div>\n\n              <Link\n                to={\"/genes/\" + currentGene.id}\n                className=\"badge badge-success\">\n                View\n              </Link>\n            </div>\n          ) : (\n            <div>\n              <br />\n              <p>Gene info will appear here...</p>\n            </div>\n          )}\n        </div>\n      </div>\n    );\n};\n\nexport default GenesList","// Create New Protein View\nimport React, { useState } from \"react\";\nimport ProteinDataService from \"../../services/ProteinService\";\n\nimport { useForm } from \"react-hook-form\";\n\nconst styles = {}\n\nconst CreateProtein = () => {\n  const initialProteinState = {\n    id: null,\n    name: \"\",\n    sequence: \"\",\n    related_gene: null,\n  };\n  const [protein, setProtein] = useState(initialProteinState);\n  const [submitted, setSubmitted] = useState(false);\n  const [error, setError] = useState(false);\n\n  const { register, handleSubmit, errors } = useForm(); \n\n  const handleInputChange = (event) => {\n    const { name, value } = event.target;\n    setProtein({ ...protein, [name]: value });\n  };\n\n  const saveProtein = () => {\n    var data = {\n      name: protein.name,\n      sequence: protein.sequence,\n      gene: protein.gene,\n    };\n    setError(false)\n    ProteinDataService.createProtein(data)\n      .then((response) => {\n        setProtein({\n          id: response.data.id,\n          name: response.data.name,\n          sequence: response.data.sequence,\n          gene: response.data.gene,\n        });\n        setSubmitted(true);\n        console.log(response.data);\n      })\n      .catch((e) => {\n        console.log(e);\n        setError(true)\n      });\n  };\n\n  const createProtein = () => {\n    setProtein(initialProteinState);\n    setSubmitted(false);\n  };\n\n  function onSubmit(){\n    saveProtein();\n  }\n\n  return (\n    <div className=\"submit-form\">\n      {error && <div style={{ color: `red` }}>This Protein Already Exists</div>}\n      {submitted ? (\n        <div>\n          <h4>You submitted successfully!</h4>\n          <button className=\"btn btn-success\" onClick={createProtein}>\n            New\n          </button>\n        </div>\n      ) : (\n        <div>\n          <h3>New Protein</h3>\n          <form onSubmit={handleSubmit(onSubmit)}>\n            <div className=\"form-group\">\n              <label htmlFor=\"name\">Name</label>\n              <input\n                type=\"text\"\n                className=\"form-control\"\n                id=\"name\"\n                required\n                value={protein.name}\n                onChange={handleInputChange}\n                name=\"name\"\n                ref={register({\n                  required: true,\n                })}\n                style={{\n                  ...styles.input,\n                  borderColor: errors.name && \"red\",\n                }}\n              />\n            </div>\n\n            <div className=\"form-group\">\n              <label htmlFor=\"sequence\">Sequence</label>\n              <input\n                type=\"text\"\n                className=\"form-control\"\n                id=\"sequence\"\n                required\n                value={protein.sequence}\n                onChange={handleInputChange}\n                name=\"sequence\"\n                ref={register({\n                  required: true,\n                  pattern: /[A-Z]/,\n                })}\n                style={{\n                  ...styles.input,\n                  borderColor: errors.sequence && \"red\",\n                }}\n              />\n              {errors.sequence && \"Sequence can only contain letters\"}\n            </div>\n\n            <div className=\"form-group\">\n              <label htmlFor=\"gene\">Gene</label>\n              <input\n                type=\"text\"\n                className=\"form-control\"\n                id=\"sequence\"\n                required\n                value={protein.gene}\n                onChange={handleInputChange}\n                name=\"gene\"\n                ref={register({\n                  required: true,\n                })}\n              />\n            </div>\n\n            <button type=\"submit\" className=\"btn btn-success\">\n              Submit\n            </button>\n          </form>\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default CreateProtein;","// Single Protein View\nimport React, { useState, useEffect } from \"react\";\nimport ProteinDataService from \"../../services/ProteinService\";\nimport { Link } from \"react-router-dom\";\n\nconst ProteinView = (props) => {\n  const initialProteinState = {\n    id: null,\n    name: \"\",\n    sequence: \"\",\n    related_gene: []\n  };\n  const [currentProtein, setCurrentProtein] = useState(initialProteinState);\n  const [message, setMessage] = useState(\"\");\n\n  const getProtein = (id) => {\n    ProteinDataService.getProtein(id)\n      .then((response) => {\n        let data = {\n          id: response.data.id,\n          name: response.data.name,\n          sequence: response.data.sequence,\n          related_gene: response.data.related_gene\n        }\n        setCurrentProtein(data);\n        console.log(response.data);\n      })\n      .catch((e) => {\n        console.log(e);\n      });\n  };\n\n  useEffect(() => {\n    getProtein(props.match.params.id);\n  }, [props.match.params.id]);\n\n  return (\n    <div>\n      {currentProtein ? (\n        <div className=\"edit-form\">\n          <h4>Protein: {currentProtein.name}</h4>\n          <br/>\n          <form>\n            <div className=\"form-group\">\n              <h5>Related Gene</h5>\n              <a href={\"/genes/\" + currentProtein.related_gene.id}>{currentProtein.related_gene.name}</a>\n            </div>\n            <div className=\"form-group\">\n              <h5>Sequence</h5>\n              {currentProtein.sequence}\n            </div>\n          </form>\n\n          <Link\n            to={\"/proteins/update/\" + currentProtein.id}\n            className=\"badge badge-warning\">\n            Edit\n          </Link>\n          <p>{message}</p>\n        </div>\n      ) : (\n        <div>\n          <br />\n          <p>An Error has occurred...</p>\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default ProteinView;","// List all Proteins View\nimport React, { useState, useEffect } from 'react';\nimport ProteinDataService from '../../services/ProteinService';\nimport { Link } from 'react-router-dom';\n\nconst ProteinsList = () => {\n    const [proteins, setProteins] = useState([]);\n    const [currentProtein, setCurrentProtein] = useState(null);\n    const [currentIndex, setCurrentIndex] = useState(-1);\n    useEffect(() => {\n        retrieveProteins();\n    }, []);\n\n    const retrieveProteins = () => {\n        ProteinDataService.getProteins()\n            .then(response => {\n                setProteins(response.data);\n                console.log(response.data);\n            })\n            .catch(e => {\n                console.log(e);\n            });\n    };\n\n    const setActiveProtein = (protein, index) => {\n        setCurrentProtein(protein);\n        setCurrentIndex(index);\n    };\n\n    return (\n      <div className=\"list row\">\n        <div className=\"col-md-6\">\n          <h4>Proteins List</h4>\n\n          <ul className=\"list-group\">\n            {proteins &&\n              proteins.map((protein, index) => (\n                <li\n                  className={\n                    \"list-group-item \" +\n                    (index === currentIndex ? \"active\" : \"\")\n                  }\n                  onClick={() => setActiveProtein(protein, index)}\n                  key={index}>\n                  {protein.name}\n                </li>\n              ))}\n          </ul>\n        </div>\n        <div className=\"col-md-6\">\n          {currentProtein ? (\n            <div>\n              <h4>Protein</h4>\n              <div>\n                <label>\n                  <strong>Name:</strong>\n                </label>{\" \"}\n                {currentProtein.name}\n              </div>\n              <div>\n                <label>\n                  <strong>Gene:</strong>\n                </label>{\" \"}\n                <a href={\"/genes/\" + currentProtein.related_gene.id}>\n                  {currentProtein.related_gene.name}\n                </a>\n              </div>\n\n              <Link\n                to={\"/proteins/\" + currentProtein.id}\n                className=\"badge badge-success\">\n                View\n              </Link>\n            </div>\n          ) : (\n            <div>\n              <br />\n              <p>Protein info will appear here...</p>\n            </div>\n          )}\n        </div>\n      </div>\n    );\n};\n\nexport default ProteinsList","//Update Gene View\nimport React, { useState, useEffect } from \"react\";\nimport ProteinDataService from \"../../services/ProteinService\";\nimport { Link } from \"react-router-dom\";\n\nconst UpdateProtein = (props) => { \n  const initialProteinState = {\n    id: null,\n    name: \"\",\n    sequence: \"\",\n    gene: \"\"\n  };\n  const [currentProtein, setCurrentProtein] = useState(initialProteinState);\n  const [message, setMessage] = useState(\"\");\n\n  const getProtein = (id) => {\n    ProteinDataService.getProtein(id)\n      .then((response) => {\n        setCurrentProtein({\n          id: response.data.id,\n          name: response.data.name,\n          sequence: response.data.sequence,\n          gene: response.data.related_gene.name\n        });\n        console.log(response.data);\n      })\n      .catch((e) => {\n        console.log(e);\n      });\n  };\n\n  useEffect(() => {\n    console.log(props.match.params)\n    getProtein(props.match.params.id);\n  }, [props.match.params.id]);\n\n  const handleInputChange = (event) => {\n    const { name, value } = event.target;\n    setCurrentProtein({ ...currentProtein, [name]: value });\n  };\n\n  const updateProtein = () => {\n    console.log(currentProtein)\n    ProteinDataService.updateProtein(currentProtein.id, currentProtein)\n      .then((response) => {\n        console.log(response.data);\n        setMessage(\"The Protein was updated successfully\");\n      })\n      .catch((e) => {\n        console.log(e);\n      });\n  };\n\n  const deleteProtein = () => {\n    ProteinDataService.deleteProtein(currentProtein.id)\n      .then((response) => {\n        console.log(response.data);\n        props.history.push(\"/proteins/\");\n      })\n      .catch((e) => {\n        console.log(e);\n      });\n  };\n\n  return (\n    <div>\n      {currentProtein ? (\n        <div className=\"edit-form\">\n          <h4>Protein</h4>\n          <form>\n            <div className=\"form-group\">\n              <label htmlFor=\"name\">Name</label>\n              <input\n                type=\"text\"\n                className=\"form-control\"\n                id=\"name\"\n                name=\"name\"\n                value={currentProtein.name}\n                onChange={handleInputChange}\n              />\n            </div>\n            <div className=\"form-group\">\n              <label htmlFor=\"gene\">Related Gene</label>\n              <input\n                type=\"text\"\n                className=\"form-control\"\n                id=\"gene\"\n                name=\"gene\"\n                value={currentProtein.gene}\n                onChange={handleInputChange}\n              />\n            </div>\n            <div className=\"form-group\">\n              <label htmlFor=\"sequence\">Sequence</label>\n              <input\n                type=\"text\"\n                className=\"form-control\"\n                id=\"sequence\"\n                name=\"sequence\"\n                value={currentProtein.sequence}\n                onChange={handleInputChange}\n              />\n            </div>\n          </form>\n\n          <button className=\"badge badge-danger mr-2\" onClick={deleteProtein}>\n            Delete\n          </button>\n\n          <button\n            type=\"submit\"\n            className=\"badge badge-success\"\n            onClick={updateProtein}>\n            Update\n          </button>\n          <p>{message}</p>\n        </div>\n      ) : (\n        <div>\n          <br />\n          <p>An Error has occurred...</p>\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default UpdateProtein;\n","import React from 'react';\nimport { Switch, Route, Link } from 'react-router-dom';\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport './App.css';\n\nimport Home from './components/home';\nimport GeneView from \"./components/gene/GeneView\";\nimport CreateGene from './components/gene/CreateGene';\nimport UpdateGene from './components/gene/UpdateGene';\nimport GeneList from './components/gene/GeneList';\nimport CreateProtein from './components/protein/CreateProtein';\nimport ProteinView from './components/protein/ProteinView';\nimport ProteinList from './components/protein/ProteinList';\nimport UpdateProtein from \"./components/protein/UpdateProtein\";\n\nfunction App() {\n  return (\n    <div>\n      <nav className=\"navbar navbar-expand navbar-dark bg-dark\">\n        <a href=\"/\" className=\"navbar-brand\">\n          GeneStore\n        </a>\n        <div className=\"navbar-nav mr-auto\">\n          <li className=\"nav-item\">\n            <Link to={\"/genes\"} className=\"nav-link\">\n              Genes\n            </Link>\n          </li>\n          <li className=\"nav-item\">\n            <Link to={\"/proteins\"} className=\"nav-link\">\n              Proteins\n            </Link>\n          </li>\n        </div>\n      </nav>\n\n      <div className=\"container mt-3\">\n        <Switch>\n          <Route exact path=\"/\" component={Home} />\n          <Route exact path=\"/genes\" component={GeneList} />\n          <Route exact path=\"/genes/create\" component={CreateGene} />\n          <Route exact path=\"/genes/:id\" component={GeneView} />\n          <Route exact path=\"/genes/update/:id\" component={UpdateGene} />\n          <Route exact path=\"/proteins\" component={ProteinList} />\n          <Route exact path=\"/proteins/create\" component={CreateProtein} />\n          <Route exact path=\"/proteins/:id\" component={ProteinView} />\n          <Route exact path=\"/proteins/update/:id\" component={UpdateProtein} />\n        </Switch>\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter } from 'react-router-dom'\nimport App from './App';\n// import reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <BrowserRouter>\n    <App />\n  </BrowserRouter>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n// reportWebVitals();\n"],"sourceRoot":""}